#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_GlobalFunctions.BPFL_GlobalFunctions_C
class UBPFL_GlobalFunctions_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_GlobalFunctions_C* GetDefaultObj();

	void Is_There_Enough_Space_to_Install_Mod(int64 DiskSpace, const struct FInstallProgressMod& ModToInstall, class UObject* __WorldContext, bool EnoughSpace, const struct FCFCoreFileSize& CallFunc_GetModSize_SizeStruct, class FText CallFunc_GetModSize_SizeInText, int64 CallFunc_GetModSize_bytes, bool CallFunc_GreaterEqual_Int64Int64_ReturnValue);
	void GetProcessedBarProgress(int32 Amount, enum class ELibraryProgressState InstallProgressState, class UObject* __WorldContext, double ReturnValue, bool MaintainPreviousValue, double Temp_real_Variable, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_Conv_IntToDouble_ReturnValue, double Temp_real_Variable_1, double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue_1, double Temp_real_Variable_2, double Temp_real_Variable_3, double Temp_real_Variable_4, double Temp_real_Variable_5, double Temp_real_Variable_6, double Temp_real_Variable_7, double Temp_real_Variable_8, double Temp_real_Variable_9, double Temp_real_Variable_10, enum class ELibraryProgressState Temp_byte_Variable, double K2Node_Select_Default, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void CreateModPageFromID(int64 Mod_ID, int32 DrawUIOnZOrder, class UObject* __WorldContext, class UUI_ModPage_C* ReturnValue, class UUI_ModPage_C* CallFunc_Create_ReturnValue);
	void FormatDownloadNumber(int64 Value, class UObject* __WorldContext, class FText FinalAmount, class FText CallFunc_Conv_Int64ToText_ReturnValue, int64 CallFunc_Divide_Int64Int64_ReturnValue, class FText CallFunc_Conv_Int64ToText_ReturnValue_1, int64 CallFunc_Divide_Int64Int64_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FText CallFunc_Conv_Int64ToText_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_GetSubstring_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_EqualEqual_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, int64 CallFunc_Divide_Int64Int64_ReturnValue_2, int64 CallFunc_Divide_Int64Int64_ReturnValue_3, class FText CallFunc_Conv_Int64ToText_ReturnValue_3, class FText CallFunc_Conv_Int64ToText_ReturnValue_4, const class FString& CallFunc_Conv_TextToString_ReturnValue_2, const class FString& CallFunc_Conv_TextToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_GetSubstring_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, class FText CallFunc_Conv_StringToText_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, class FText CallFunc_Conv_StringToText_ReturnValue_3, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_Less_Int64Int64_ReturnValue, bool CallFunc_Less_Int64Int64_ReturnValue_1);
	void GetModVersion(const struct FInstallProgressMod& ModInfo, class UObject* __WorldContext, class FText FinalAmount);
	void GetDownloadCount(const struct FInstallProgressMod& ModInfo, class UObject* __WorldContext, class FText FinalAmount, class FText CallFunc_FormatDownloadNumber_FinalAmount);
	void GetModName(const struct FInstallProgressMod& ModInfo, class UObject* __WorldContext, const class FString& Name);
	void GetModSize(const struct FInstallProgressMod& ModInfo, class UObject* __WorldContext, const struct FCFCoreFileSize& SizeStruct, class FText SizeInText, int64 Bytes, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FFile& CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_FormatFileSize_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FCFCoreFileSize& CallFunc_BreakFileSize_ReturnValue, bool CallFunc_EqualEqual_Int64Int64_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void GetAuthorName(const struct FInstallProgressMod& ModInfo, class UObject* __WorldContext, const class FString& CombinedAuthorsNames, const class FString& Local_TotalAuthors, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FModAuthor& CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_StringLimit_NewString, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void CreateButtonStyleFromSingleColor(const struct FLinearColor& Color, class UObject* __WorldContext, const struct FButtonStyle& ButtonStyle, const struct FLinearColor& CallFunc_Add_LinearColorLinearColor_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_1, const struct FLinearColor& CallFunc_Multiply_LinearColorFloat_ReturnValue, const struct FLinearColor& CallFunc_Multiply_LinearColorFloat_ReturnValue_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2, const struct FSlateColor& K2Node_MakeStruct_SlateColor_3, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_2, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_3, const struct FButtonStyle& K2Node_MakeStruct_ButtonStyle);
	void HEXtoByte(const class FString& First_value, const class FString& Second_value, class UObject* __WorldContext, uint8 InputPin1, const TArray<class FString>& HexDigits, const TArray<class FString>& K2Node_MakeArray_Array, int32 CallFunc_Array_Find_ReturnValue, int32 CallFunc_Array_Find_ReturnValue_1, int32 CallFunc_And_IntInt_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue_1, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue);
	void HEXtoSRGB(const class FString& String, class UObject* __WorldContext, const struct FColor& Color, const TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, const class FString& CallFunc_Array_Get_Item, const class FString& CallFunc_Array_Get_Item_1, const class FString& CallFunc_Array_Get_Item_2, const class FString& CallFunc_Array_Get_Item_3, uint8 CallFunc_HEXtoByte_InputPin1, const class FString& CallFunc_Array_Get_Item_4, const class FString& CallFunc_Array_Get_Item_5, uint8 CallFunc_HEXtoByte_InputPin1_1, const class FString& CallFunc_Array_Get_Item_6, const class FString& CallFunc_Array_Get_Item_7, uint8 CallFunc_HEXtoByte_InputPin1_2, uint8 CallFunc_HEXtoByte_InputPin1_3, const struct FColor& K2Node_MakeStruct_Color);
	void SRGBtoHEX(const struct FColor& Color, class UObject* __WorldContext, const class FString& ReturnValue, const TArray<class FString>& String, int32 Temp_int_Array_Index_Variable, const TArray<uint8>& K2Node_MakeArray_Array, uint8 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_ByteToHex_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_JoinStringArray_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void ByteToHex(uint8 InputPin, class UObject* __WorldContext, const class FString& ReturnValue, const TArray<class FString>& HexDigits, const TArray<class FString>& K2Node_MakeArray_Array, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Divide_IntInt_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue_1, const class FString& CallFunc_Array_Get_Item, const class FString& CallFunc_Array_Get_Item_1, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void SetFocusedWidget(class UWidget* Widget, class UObject* __WorldContext, const TArray<class UUI_StoreMenu_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UUI_StoreMenu_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue);
	void TextLimit(class UTextBlock* Text, int32 Limit, const class FString& String, class UObject* __WorldContext, const class FString& CallFunc_StringLimit_NewString, class FText CallFunc_Conv_StringToText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, const TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void CheckPlayerInputDevices(class UObject* __WorldContext, enum class ENUM_InputDevices UsingGamepad_, bool Temp_bool_Variable, const TArray<class UUI_StoreMenu_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, enum class ENUM_InputDevices Temp_byte_Variable, class UUI_StoreMenu_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, enum class ENUM_InputDevices Temp_byte_Variable_1, enum class ENUM_InputDevices K2Node_Select_Default);
	void StringLimit(const class FString& String, int32 Limit, class UObject* __WorldContext, const class FString& NewString, const class FString& LocalString, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void ErrorMessage(class UObject* Object, const class FString& ErrorMessage, class UObject* __WorldContext);
};

}



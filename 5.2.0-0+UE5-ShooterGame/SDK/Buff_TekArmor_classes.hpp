#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x110 (0xC80 - 0xB70)
// BlueprintGeneratedClass Buff_TekArmor.Buff_TekArmor_C
class ABuff_TekArmor_C : public ABuff_OverrideVelocity_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB70(0x8)(AssetRegistrySearchable, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, PersistentInstance, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	class AShooterCharacter*                     Ref_OwningPlayer;                                  // 0xB78(0x8)(ZeroConstructor)
	enum class EPrimalEquipmentType              CurrentEquipmentSlot;                              // 0xB80(0x1)(None)
	uint8                                        Pad_2AC1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     Ref_OwningPlayerController;                        // 0xB88(0x8)(ZeroConstructor)
	class ABuff_TekArmor_C*                      SelfAsObj;                                         // 0xB90(0x8)(ZeroConstructor)
	class AWeapFists_C*                          FistWeapon;                                        // 0xB98(0x8)(ZeroConstructor)
	class UPrimalItemArmor_Base_Tek_C*           Ref_ArmorPiece;                                    // 0xBA0(0x8)(ZeroConstructor)
	enum class EPrimalEquipmentType              TekBuffEquipmentType;                              // 0xBA8(0x1)(None)
	bool                                         bIsTekAbilityActive;                               // 0xBA9(0x1)(None)
	uint8                                        Pad_2AC2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          TekArmorMessage_Color;                             // 0xBAC(0x10)(None)
	uint8                                        Pad_2AC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       TekArmorMessage_DisplayScale;                      // 0xBC0(0x8)(None)
	double                                       TekArmorMessage_DisplayTime;                       // 0xBC8(0x8)(None)
	bool                                         bInfiniteAmmo;                                     // 0xBD0(0x1)(None)
	uint8                                        Pad_2AC5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATekArmor_EffectActor_C*>       SpawnedFXActors;                                   // 0xBD8(0x10)(ZeroConstructor, ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, ExposeOnSpawn, PersistentInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FName                                  TekArmorName;                                      // 0xBE8(0x8)(None)
	class UTexture2D*                            TekArmorIcon;                                      // 0xBF0(0x8)(ZeroConstructor)
	bool                                         bShouldWarpFOV;                                    // 0xBF8(0x1)(None)
	uint8                                        Pad_2AC6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       WarpFOV_target;                                    // 0xC00(0x8)(None)
	double                                       WarpFOV_MAX;                                       // 0xC08(0x8)(None)
	double                                       WarpFOV_lag_in;                                    // 0xC10(0x8)(None)
	double                                       WarpFOV_lag_out;                                   // 0xC18(0x8)(None)
	double                                       WarpFOV_start;                                     // 0xC20(0x8)(None)
	double                                       ConsumeElementInterval;                            // 0xC28(0x8)(None)
	double                                       TimeSinceLastConsumeElement;                       // 0xC30(0x8)(None)
	enum class EPrimalEquipmentType              PreventAbilityActiveSlot;                          // 0xC38(0x1)(None)
	bool                                         bTekIgnoredMoveInput;                              // 0xC39(0x1)(None)
	bool                                         bTekIgnoredLookInput;                              // 0xC3A(0x1)(None)
	bool                                         bLeftBumperHeld;                                   // 0xC3B(0x1)(None)
	bool                                         bIsWeapon;                                         // 0xC3C(0x1)(None)
	uint8                                        Pad_2AC8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Restricted_because_of_genesis_map_string;          // 0xC40(0x10)(ContainsInstancedReference, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, ExposeOnSpawn, PersistentInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	double                                       GenesisAbilityErrorRateLimitSeconds;               // 0xC50(0x8)(None)
	bool                                         Has_set_whether_tek_abilities_are_allowed_in_genesis; // 0xC58(0x1)(None)
	bool                                         Tek_abilities_are_allowed_in_genesis;              // 0xC59(0x1)(None)
	uint8                                        Pad_2ACA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GenesisMapName;                                    // 0xC60(0x10)(ContainsInstancedReference, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, PersistentInstance, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        AbilityRequiresEngrams;                            // 0xC70(0x10)(ZeroConstructor)

	static class UClass* StaticClass();
	static class ABuff_TekArmor_C* GetDefaultObj();

	void GetWeaponMesh(class USkeletalMeshComponent* OutMesh);
	void HideBoostIcon(bool ShouldSet, bool WithValue);
	void SetJetpackOffset(const struct FTransform& AddTransform);
	void HasRequiredEngrams(bool HasEngrams, bool OutHasEngrams, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_MakeLiteralString_ReturnValue, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UObject* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UPrimalItem* K2Node_DynamicCast_AsPrimal_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class AShooterPlayerState* K2Node_DynamicCast_AsShooter_Player_State, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_HasEngram_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2);
	void IsTekBuffDisabled(bool bIsDisabled, bool bRetVal, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable_2, int32 Temp_int_Array_Index_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_2, class AShooterPlayerController* CallFunc_Get_Ref_Owning_PlayerController_controller, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player, class APawn* CallFunc_K2_GetPawn_ReturnValue, class APrimalDinoCharacter* K2Node_DynamicCast_AsPrimal_Dino_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class FName CallFunc_Array_Get_Item, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_Array_Length_ReturnValue, const TArray<class APrimalBuff*>& CallFunc_GetAllBuffs_AllBuffs, class APrimalBuff* CallFunc_Array_Get_Item_1, const TArray<class FName>& CallFunc_BPPreventTekArmorBuffs_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, class FName CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character_1, bool K2Node_DynamicCast_bSuccess_2, class AMissionType* CallFunc_GetActiveMission_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1);
	void Check_genesis_restrictions_for_player(class APrimalCharacter* Player, bool Is_restricted, bool Ret_val, const class FString& CallFunc_BPGetPrimaryMapName_ReturnValue, bool CallFunc_HasBuffWithCustomTag_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWorld* CallFunc_K2_GetWorld_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, enum class ENetworkModeResult CallFunc_IsRunningOnServer_OutNetworkMode, bool K2Node_SwitchEnum_CmpSuccess, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AShooterGameMode* K2Node_DynamicCast_AsShooter_Game_Mode, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_1);
	void BPActivated(class AActor* ForInstigator, bool CallFunc_EqualEqual_BoolBool_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AShooterGameMode* K2Node_DynamicCast_AsShooter_Game_Mode, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasBuffWithCustomTag_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue_1, enum class ENetworkModeResult CallFunc_IsRunningOnServer_OutNetworkMode, bool K2Node_SwitchEnum_CmpSuccess);
	void Is_Restricted_Because_Of_Genesis_Map(bool Restricted, bool Ret_val, bool CallFunc_check_genesis_restrictions_for_player_is_restricted);
	void Get_Is_Player_in_SealedSpace(bool Result, class AActor* CallFunc_GetOwner_ReturnValue, class APrimalCharacter* K2Node_DynamicCast_AsPrimal_Character, bool K2Node_DynamicCast_bSuccess);
	void IsAbilityValid(bool OutValid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void IsPlayerInWaterVolume(bool Result, double WaterVolumeTopZ, bool CallFunc_Get_Is_Player_in_SealedSpace_result, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player, bool CallFunc_Not_PreBool_ReturnValue, class APhysicsVolume* CallFunc_GetPhysicsVolume_ReturnValue, const struct FVector& CallFunc_GetActorBounds_Origin, const struct FVector& CallFunc_GetActorBounds_BoxExtent, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_SelectFloat_ReturnValue);
	void SpawnFX(class UParticleSystem* EmitterTemplate, const struct FTransform& InTransform, class USoundBase* Sound, double VolumeMultiplier, double PitchMultiplier, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast, float CallFunc_PlaySoundAtLocation_PitchMultiplier_ImplicitCast);
	void Should_Damage_Actor(class AActor* Victim, bool Result, bool RetVal, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AShooterGameMode* K2Node_DynamicCast_AsShooter_Game_Mode, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_AreTribesAllied_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void ResetPlayerFOV(class AShooterPlayerCameraManager* CallFunc_Get_RefOwningPlayer_Camera_Manager_ref, float K2Node_VariableSet_NormalFOV_ImplicitCast);
	void SetTekIgnoreLookInput(bool NewIgnore, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void SetTekIgnoreMoveInput(bool NewIgnore, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void AllowPostProcessEffect(bool ReturnValue);
	void BPDeactivated(class AActor* ForInstigator, bool CallFunc_IsLocallyControlled_ReturnValue);
	void ResetTargetFOV();
	void IsWarping_FOV(bool Result, class AShooterPlayerCameraManager* CallFunc_Get_RefOwningPlayer_Camera_Manager_ref, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast);
	void Get_DefaultTekBuff(class ABuff_TekArmor_C* Ref, class UObject* CallFunc_GetDefaultObject_ReturnValue, class ABuff_TekArmor_C* K2Node_DynamicCast_AsBuff_Tek_Armor, bool K2Node_DynamicCast_bSuccess);
	void GetDefaultPlayer(class APrimalCharacter* Ref, class UObject* CallFunc_GetDefaultObject_ReturnValue, class APrimalCharacter* K2Node_DynamicCast_AsPrimal_Character, bool K2Node_DynamicCast_bSuccess);
	void Client_Consume_Element_After_Time(double DeltaTime, int32 ElementCost, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue);
	void BPSetupForInstigator(class AActor* ForInstigator, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, class AShooterPlayerCameraManager* CallFunc_Get_RefOwningPlayer_Camera_Manager_ref, class UPrimalItemArmor_Base_Tek_C* CallFunc_GetRelatedTekArmorRef_tekArmorRef, class AActor* CallFunc_GetOwner_ReturnValue, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character, bool K2Node_DynamicCast_bSuccess, class AController* CallFunc_GetController_ReturnValue, class APlayerController* CallFunc_CastToPlayerController_ReturnValue, double K2Node_VariableSet_warpFOV_start_ImplicitCast, double K2Node_VariableSet_warpFOV_target_ImplicitCast);
	void IsPlayerGrounded(bool Result, class UCharacterMovementComponent* CallFunc_Get_Ref_Owning_PlayerMovement_movement, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void Get_RefOwningPlayer_Camera_Manager(class AShooterPlayerCameraManager* Ref, class AShooterPlayerCameraManager* K2Node_DynamicCast_AsShooter_Player_Camera_Manager, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void UpdatePlayerFOV(double IntensityRatio, bool WarpIn, double NewFOV, class AShooterPlayerCameraManager* CallFunc_Get_RefOwningPlayer_Camera_Manager_ref, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, class AShooterPlayerCameraManager* CallFunc_Get_RefOwningPlayer_Camera_Manager_ref_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_NotEqual_DoubleDouble_B_ImplicitCast, double CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast, double CallFunc_Subtract_DoubleDouble_B_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, float K2Node_VariableSet_NormalFOV_ImplicitCast);
	void Get_Ref_Owning_PlayerMovement(class UCharacterMovementComponent* Movement, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player);
	void Get_Ref_Owning_PlayerController(class AShooterPlayerController* Controller, class APlayerController* CallFunc_GetOwnerController_ReturnValue, class AShooterPlayerController* K2Node_DynamicCast_AsShooter_Player_Controller, bool K2Node_DynamicCast_bSuccess);
	void GetRef_OwningPlayer(class AShooterCharacter* Player, class AActor* CallFunc_GetOwner_ReturnValue, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character, bool K2Node_DynamicCast_bSuccess);
	void AreAnyTekAbilitiesActive(bool Result, bool RetVal, bool CallFunc_IsTekArmorUsingAbility__result);
	void IsTekArmorUsingAbility_(uint8 ArmorType, bool Result, bool RetVal, uint8 CallFunc_GetValidValue_ReturnValue, class UPrimalItem* CallFunc_GetEquippedItemOfType_ReturnValue, class UPrimalItemArmor_Base_Tek_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Base_Tek, bool K2Node_DynamicCast_bSuccess, class UClass* CallFunc_GetResolvedTekArmorBuff_ResolvedTekArmorBuff, class APrimalBuff* CallFunc_GetBuff_ReturnValue, class ABuff_TekArmor_C* K2Node_DynamicCast_AsBuff_Tek_Armor, bool K2Node_DynamicCast_bSuccess_1);
	void DisplayTekArmorMessage(const class FString& Message, class USoundBase* Sound, class AShooterPlayerController* CallFunc_Get_Ref_Owning_PlayerController_controller, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, float CallFunc_ClientServerNotificationSingle_DisplayTime_ImplicitCast, float CallFunc_ClientServerNotificationSingle_DisplayScale_ImplicitCast);
	void SetCastedArmorPieceRef();
	void GetRelatedTekArmorRef(class UPrimalItemArmor_Base_Tek_C* TekArmorRef, class UPrimalItemArmor_Base_Tek_C* ArmorRef, class UPrimalItem* CallFunc_GetEquippedItemOfType_ReturnValue, class UPrimalItemArmor_Base_Tek_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Base_Tek, bool K2Node_DynamicCast_bSuccess);
	void CanUseTekAbility(bool bNotifyIfOutOfElement, bool bResult, bool bRetVal, bool CallFunc_HasRequiredEngrams_HasEngrams, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player, bool CallFunc_IsTekBuffDisabled_bIsDisabled, bool CallFunc_Not_PreBool_ReturnValue, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player_1, class AShooterCharacter* CallFunc_GetRef_OwningPlayer_player_2, bool CallFunc_BPIsConscious_ReturnValue, bool CallFunc_IsValid_ReturnValue, class ABiomeZoneVolume* CallFunc_GetMyBiomeZoneVolume_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UClass* CallFunc_Conv_SoftClassReferenceToClass_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsPrimal_Buff, bool K2Node_ClassDynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_ClassIsChildOf_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, const class FString& CallFunc_MakeLiteralString_ReturnValue, int32 CallFunc_GetWeaponClipAmmo_ReturnValue, class UPrimalItem* CallFunc_BPGetItemOfTemplate_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void Equipped_SetToMaxElement(enum class EPrimalEquipmentType ItemSlot);
	void Multi_SpawnFX(class UParticleSystem* ParticleTemplate, class USoundBase* Sound, const struct FTransform& Transform, double SoundVolume, double SoundPitch);
	void Equipped_TryToDecreaseElement(int32 AmountToDecreaseBy, enum class EPrimalEquipmentType ItemSlot);
	void CheckForArmorRef();
	void Server_SetTekAbilityActive(bool NewActive);
	void RateLimitedGenesisAbilityWarning();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ExecuteUbergraph_Buff_TekArmor(int32 EntryPoint, const struct FKey& K2Node_InputKeyEvent_Key, const struct FKey& Temp_struct_Variable, enum class EPrimalEquipmentType K2Node_CustomEvent_ItemSlot_1, class UParticleSystem* K2Node_CustomEvent_particleTemplate, class USoundBase* K2Node_CustomEvent_Sound, const struct FTransform& K2Node_CustomEvent_transform, double K2Node_CustomEvent_soundVolume, double K2Node_CustomEvent_soundPitch, class UPrimalItem* CallFunc_GetEquippedItemOfType_ReturnValue, class UPrimalItemArmor_Base_Tek_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Base_Tek, bool K2Node_DynamicCast_bSuccess, int32 K2Node_CustomEvent_AmountToDecreaseBy, enum class EPrimalEquipmentType K2Node_CustomEvent_ItemSlot, class UPrimalItem* CallFunc_GetEquippedItemOfType_ReturnValue_1, class UPrimalItemArmor_Base_Tek_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Base_Tek_1, bool K2Node_DynamicCast_bSuccess_1, bool K2Node_CustomEvent_newActive, bool CallFunc_EqualEqual_BoolBool_ReturnValue, float CallFunc_TimeSeconds_ReturnValue, class APlayerController* CallFunc_GetOwnerController_ReturnValue, double CallFunc_FloatToDouble_ReturnValue, class AShooterPlayerController* K2Node_DynamicCast_AsShooter_Player_Controller, bool K2Node_DynamicCast_bSuccess_2, class AActor* CallFunc_GetOwner_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_1, class AShooterCharacter* K2Node_DynamicCast_AsShooter_Character, bool K2Node_DynamicCast_bSuccess_3, class AShooterPlayerState* K2Node_DynamicCast_AsShooter_Player_State, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IsCooldownComplete_ReturnValue, double CallFunc_FloatToDouble_value_ImplicitCast, float CallFunc_IsCooldownComplete_CooldownDuration_ImplicitCast);
};

}



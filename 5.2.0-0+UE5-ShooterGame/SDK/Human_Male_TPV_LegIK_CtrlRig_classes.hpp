#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x360 (0x758 - 0x3F8)
// RigVMBlueprintGeneratedClass Human_Male_TPV_LegIK_CtrlRig.Human_Male_TPV_LegIK_CtrlRig_C
class UHuman_Male_TPV_LegIK_CtrlRig_C : public UControlRig
{
public:
	TArray<struct FRigElementKey>                Feet;                                              // 0x3F8(0x10)(AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FRigElementKey                        LeftFoot;                                          // 0x408(0xC)(None)
	struct FRigElementKey                        RightFoot;                                         // 0x414(0xC)(None)
	struct FVector                               R_HitLocation;                                     // 0x420(0x18)(None)
	struct FVector                               L_HitLocation;                                     // 0x438(0x18)(None)
	double                                       R_Offset;                                          // 0x450(0x8)(None)
	double                                       L_Offset;                                          // 0x458(0x8)(None)
	struct FVector                               L_Effector;                                        // 0x460(0x18)(None)
	struct FVector                               R_Effector;                                        // 0x478(0x18)(None)
	struct FQuat                                 L_EffectorRot;                                     // 0x490(0x20)(None)
	struct FQuat                                 R_EffectorRot;                                     // 0x4B0(0x20)(None)
	struct FVector                               L_PV;                                              // 0x4D0(0x18)(None)
	struct FVector                               R_PV;                                              // 0x4E8(0x18)(None)
	double                                       CurrentZOffsetLimit;                               // 0x500(0x8)(None)
	bool                                         bCrouched;                                         // 0x508(0x1)(None)
	uint8                                        Pad_3398[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       HipZOffsetLimitCrouched;                           // 0x510(0x8)(None)
	double                                       HipZOffsetLimitStanding;                           // 0x518(0x8)(None)
	double                                       HipZOffset;                                        // 0x520(0x8)(None)
	double                                       HipZOffset_LayerTwo;                               // 0x528(0x8)(None)
	struct FVector                               L_Normal;                                          // 0x530(0x18)(None)
	struct FVector                               R_Normal;                                          // 0x548(0x18)(None)
	struct FVector                               FPVShadowMeshOffset;                               // 0x560(0x18)(None)
	struct FVector                               SmoothedLocation;                                  // 0x578(0x18)(None)
	struct FVector                               RootLocOffsetGlobal;                               // 0x590(0x18)(None)
	double                                       LegLengthHipZOffset;                               // 0x5A8(0x8)(None)
	double                                       IKAlpha;                                           // 0x5B0(0x8)(None)
	double                                       TraceDistanceFactorAbove;                          // 0x5B8(0x8)(None)
	double                                       TraceDistanceFactorBelow;                          // 0x5C0(0x8)(None)
	double                                       Bone_Modifiers_Leg_Length_Percentage;              // 0x5C8(0x8)(None)
	bool                                         bProne;                                            // 0x5D0(0x1)(None)
	uint8                                        Pad_3399[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ProneTargetTransform;                              // 0x5E0(0x60)(None)
	struct FQuat                                 ProneCurrentRotation;                              // 0x640(0x20)(None)
	double                                       L_IKFactor;                                        // 0x660(0x8)(None)
	double                                       R_IKFactor;                                        // 0x668(0x8)(None)
	double                                       WasProne;                                          // 0x670(0x8)(None)
	double                                       SpeedRemapped;                                     // 0x678(0x8)(None)
	bool                                         bIsOnDino;                                         // 0x680(0x1)(None)
	bool                                         bIsLocallyControlled;                              // 0x681(0x1)(None)
	uint8                                        Pad_339A[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 ProneWorldInterpRotation;                          // 0x690(0x20)(None)
	double                                       RootZInterpolated;                                 // 0x6B0(0x8)(None)
	struct FVector                               InputRootPos;                                      // 0x6B8(0x18)(None)
	bool                                         bDebugRootInterpCompensation;                      // 0x6D0(0x1)(None)
	uint8                                        Pad_339B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Minimum_2_Result;                                  // 0x6D8(0x8)(None)
	bool                                         bUpdateInstantly;                                  // 0x6E0(0x1)(None)
	uint8                                        Pad_339C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigPose                              InitialLegScalePose;                               // 0x6E8(0x70)(None)

	static class UClass* StaticClass();
	static class UHuman_Male_TPV_LegIK_CtrlRig_C* GetDefaultObj();

};

// 0xD58 (0xD80 - 0x28)
// RigVMMemoryStorageGeneratorClass Human_Male_TPV_LegIK_CtrlRig.RigVMMemory_Literal
class URigVMMemory_Literal : public URigVMMemoryStorage
{
public:
	bool                                         RigVMModel___HierarchyGetPoseItemArray_Initial__Const; // 0x28(0x1)(None)
	enum class ERigElementType                   RigVMModel___HierarchyGetPoseItemArray_ElementType__Const; // 0x29(0x1)(None)
	uint8                                        Pad_339D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRigElementKey>                RigVMModel___RigUnit_ItemArray_1_Items__Const;     // 0x30(0x10)(None)
	struct FRigElementKey                        RigVMModel___RigUnit_SetTranslation_3_Item__Const; // 0x40(0xC)(None)
	enum class ERigVMTransformSpace              RigVMModel___RigUnit_SetTranslation_3_Space__Const; // 0x4C(0x1)(None)
	uint8                                        Pad_339E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RigVMModel___RigUnit_SetTranslation_3_Weight__Const; // 0x50(0x4)(None)
	bool                                         RigVMModel___RigUnit_SetTranslation_3_bPropagateToChildren__Const; // 0x54(0x1)(None)
	uint8                                        Pad_339F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        RigVMModel___RigUnit_SetTranslation_4_Item__Const; // 0x58(0xC)(None)
	struct FRigElementKey                        RigVMModel___RigUnit_GetTransform_4_Item__Const;   // 0x64(0xC)(None)
	struct FTransform                            RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_Transform__Const; // 0x70(0x60)(None)
	struct FLinearColor                          RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_Color__Const; // 0xD0(0x10)(None)
	float                                        RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_Scale__Const; // 0xE0(0x4)(None)
	float                                        RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_Thickness__Const; // 0xE4(0x4)(None)
	struct FVector                               RigVMModel___Scale_Value__Const;                   // 0xE8(0x18)(None)
	float                                        RigVMModel___Scale_Factor__Const;                  // 0x100(0x4)(None)
	uint8                                        Pad_33A0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_8_True__Const; // 0x108(0x8)(None)
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_8_False__Const; // 0x110(0x8)(None)
	float                                        RigVMModel___SpringInterp_4_TargetVelocityAmount__Const; // 0x118(0x4)(None)
	struct FLinearColor                          RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_1_Color__Const; // 0x11C(0x10)(None)
	float                                        RigVMModel___RigVMFunction_DebugLineNoSpace_2_Thickness__Const; // 0x12C(0x4)(None)
	float                                        RigVMModel___SpringInterp_5_Strength__Const;       // 0x130(0x4)(None)
	uint8                                        Pad_33A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Greater_B__Const;                     // 0x138(0x8)(None)
	double                                       RigVMModel___Subtract_3_A__Const;                  // 0x140(0x8)(None)
	double                                       RigVMModel___Clamp_2_Minimum__Const;               // 0x148(0x8)(None)
	struct FRigElementKey                        RigVMModel___IKTrace_0_Element__Const;             // 0x150(0xC)(None)
	uint8                                        Pad_33A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_2_1_Location__Const; // 0x160(0x18)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x178(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_0___IKTrace_GetTransform_Space__Const;     // 0x190(0x1)(None)
	bool                                         IKTrace_0___IKTrace_GetTransform_bInitial__Const;  // 0x191(0x1)(None)
	uint8                                        Pad_33A3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_0___IKTrace_RigUnit_GetTransform_Item__Const; // 0x194(0xC)(None)
	double                                       IKTrace_0___IKTrace_Multiply_2_B__Const;           // 0x1A0(0x8)(None)
	double                                       IKTrace_0___IKTrace_Multiply_1_B__Const;           // 0x1A8(0x8)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_1_B__Const;                // 0x1B0(0x18)(None)
	double                                       IKTrace_0___IKTrace_Multiply_B__Const;             // 0x1C8(0x8)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_B__Const;                  // 0x1D0(0x18)(None)
	struct FLinearColor                          IKTrace_0___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x1E8(0x10)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x1F8(0x4)(None)
	uint8                                        Pad_33A4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x200(0x60)(None)
	bool                                         IKTrace_0___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x260(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_0___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x261(0x1)(None)
	uint8                                        Pad_33A5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_0___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0x264(0x4)(None)
	struct FVector                               IKTrace_0___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0x268(0x18)(None)
	struct FLinearColor                          IKTrace_0___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0x280(0x10)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0x290(0x4)(None)
	uint8                                        Pad_33A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_0___IKTrace_Subtract_B__Const;             // 0x298(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Clamp_Minimum__Const;          // 0x2B0(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Clamp_Maximum__Const;          // 0x2C8(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_2_Location__Const; // 0x2E0(0x18)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x2F8(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_0_1___IKTrace_GetTransform_Space__Const;   // 0x310(0x1)(None)
	bool                                         IKTrace_0_1___IKTrace_GetTransform_bInitial__Const; // 0x311(0x1)(None)
	uint8                                        Pad_33A7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_0_1___IKTrace_RigUnit_GetTransform_Item__Const; // 0x314(0xC)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_2_B__Const;         // 0x320(0x8)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_1_B__Const;         // 0x328(0x8)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_1_B__Const;              // 0x330(0x18)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_B__Const;           // 0x348(0x8)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_B__Const;                // 0x350(0x18)(None)
	struct FLinearColor                          IKTrace_0_1___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x368(0x10)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x378(0x4)(None)
	uint8                                        Pad_33A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_1___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x380(0x60)(None)
	bool                                         IKTrace_0_1___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x3E0(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_0_1___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x3E1(0x1)(None)
	uint8                                        Pad_33A9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_0_1___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0x3E4(0x4)(None)
	struct FVector                               IKTrace_0_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0x3E8(0x18)(None)
	struct FLinearColor                          IKTrace_0_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0x400(0x10)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0x410(0x4)(None)
	uint8                                        Pad_33AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_0_1___IKTrace_Subtract_B__Const;           // 0x418(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Clamp_Minimum__Const;        // 0x430(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Clamp_Maximum__Const;        // 0x448(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_Location__Const; // 0x460(0x18)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x478(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_0_2___IKTrace_GetTransform_Space__Const;   // 0x490(0x1)(None)
	bool                                         IKTrace_0_2___IKTrace_GetTransform_bInitial__Const; // 0x491(0x1)(None)
	uint8                                        Pad_33AB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_0_2___IKTrace_RigUnit_GetTransform_Item__Const; // 0x494(0xC)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_2_B__Const;         // 0x4A0(0x8)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_1_B__Const;         // 0x4A8(0x8)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_1_B__Const;              // 0x4B0(0x18)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_B__Const;           // 0x4C8(0x8)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_B__Const;                // 0x4D0(0x18)(None)
	struct FLinearColor                          IKTrace_0_2___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x4E8(0x10)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x4F8(0x4)(None)
	uint8                                        Pad_33AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x500(0x60)(None)
	bool                                         IKTrace_0_2___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x560(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_0_2___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x561(0x1)(None)
	uint8                                        Pad_33AD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_0_2___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0x564(0x4)(None)
	struct FVector                               IKTrace_0_2___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0x568(0x18)(None)
	struct FLinearColor                          IKTrace_0_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0x580(0x10)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0x590(0x4)(None)
	uint8                                        Pad_33AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_0_2___IKTrace_Subtract_B__Const;           // 0x598(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Clamp_Minimum__Const;        // 0x5B0(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Clamp_Maximum__Const;        // 0x5C8(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_1_Location__Const; // 0x5E0(0x18)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x5F8(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_0_2_1___IKTrace_GetTransform_Space__Const; // 0x610(0x1)(None)
	bool                                         IKTrace_0_2_1___IKTrace_GetTransform_bInitial__Const; // 0x611(0x1)(None)
	uint8                                        Pad_33AF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_0_2_1___IKTrace_RigUnit_GetTransform_Item__Const; // 0x614(0xC)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_2_B__Const;       // 0x620(0x8)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_1_B__Const;       // 0x628(0x8)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_1_B__Const;            // 0x630(0x18)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_B__Const;         // 0x648(0x8)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_B__Const;              // 0x650(0x18)(None)
	struct FLinearColor                          IKTrace_0_2_1___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x668(0x10)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x678(0x4)(None)
	uint8                                        Pad_33B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2_1___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x680(0x60)(None)
	bool                                         IKTrace_0_2_1___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x6E0(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_0_2_1___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x6E1(0x1)(None)
	uint8                                        Pad_33B1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_0_2_1___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0x6E4(0x4)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0x6E8(0x18)(None)
	struct FLinearColor                          IKTrace_0_2_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0x700(0x10)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0x710(0x4)(None)
	uint8                                        Pad_33B2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_0_2_1___IKTrace_Subtract_B__Const;         // 0x718(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Clamp_Minimum__Const;      // 0x730(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Clamp_Maximum__Const;      // 0x748(0x18)(None)
	float                                        RigVMModel___SpringInterpQuaternionV2_1_Strength__Const; // 0x760(0x4)(None)
	uint8                                        Pad_33B3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___RigVMFunction_MathQuaternionFromTwoVectors_2_A__Const; // 0x768(0x18)(None)
	double                                       RigVMModel___Clamp_4_Minimum__Const;               // 0x780(0x8)(None)
	double                                       RigVMModel___Clamp_4_Maximum__Const;               // 0x788(0x8)(None)
	double                                       RigVMModel___Clamp_4_2_Minimum__Const;             // 0x790(0x8)(None)
	double                                       RigVMModel___Clamp_4_2_Maximum__Const;             // 0x798(0x8)(None)
	float                                        RigVMModel___Scale_2_Factor__Const;                // 0x7A0(0x4)(None)
	struct FLinearColor                          RigVMModel___RigVMFunction_DebugLineNoSpace_1_Color__Const; // 0x7A4(0x10)(None)
	struct FLinearColor                          RigVMModel___RigVMFunction_DebugLineNoSpace_1_1_Color__Const; // 0x7B4(0x10)(None)
	uint8                                        Pad_33B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_4_True__Const; // 0x7C8(0x18)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x7E0(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_1___IKTrace_GetTransform_Space__Const;     // 0x7F8(0x1)(None)
	bool                                         IKTrace_1___IKTrace_GetTransform_bInitial__Const;  // 0x7F9(0x1)(None)
	uint8                                        Pad_33B5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_1___IKTrace_RigUnit_GetTransform_Item__Const; // 0x7FC(0xC)(None)
	double                                       IKTrace_1___IKTrace_Multiply_2_B__Const;           // 0x808(0x8)(None)
	double                                       IKTrace_1___IKTrace_Multiply_1_B__Const;           // 0x810(0x8)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_1_B__Const;                // 0x818(0x18)(None)
	double                                       IKTrace_1___IKTrace_Multiply_B__Const;             // 0x830(0x8)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_B__Const;                  // 0x838(0x18)(None)
	struct FLinearColor                          IKTrace_1___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x850(0x10)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x860(0x4)(None)
	uint8                                        Pad_33B6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_1___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x870(0x60)(None)
	bool                                         IKTrace_1___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x8D0(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_1___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x8D1(0x1)(None)
	uint8                                        Pad_33B7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_1___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0x8D4(0x4)(None)
	struct FVector                               IKTrace_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0x8D8(0x18)(None)
	struct FLinearColor                          IKTrace_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0x8F0(0x10)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0x900(0x4)(None)
	uint8                                        Pad_33B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_1___IKTrace_Subtract_B__Const;             // 0x908(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Clamp_Minimum__Const;          // 0x920(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Clamp_Maximum__Const;          // 0x938(0x18)(None)
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_9_True__Const; // 0x950(0x8)(None)
	struct FVector                               LocalVariableDefault__IKTrace_FootBase__Const;     // 0x958(0x18)(None)
	enum class ERigVMTransformSpace              IKTrace_2___IKTrace_GetTransform_Space__Const;     // 0x970(0x1)(None)
	bool                                         IKTrace_2___IKTrace_GetTransform_bInitial__Const;  // 0x971(0x1)(None)
	uint8                                        Pad_33B9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        IKTrace_2___IKTrace_RigUnit_GetTransform_Item__Const; // 0x974(0xC)(None)
	double                                       IKTrace_2___IKTrace_Multiply_2_B__Const;           // 0x980(0x8)(None)
	double                                       IKTrace_2___IKTrace_Multiply_1_B__Const;           // 0x988(0x8)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_1_B__Const;                // 0x990(0x18)(None)
	double                                       IKTrace_2___IKTrace_Multiply_B__Const;             // 0x9A8(0x8)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_B__Const;                  // 0x9B0(0x18)(None)
	struct FLinearColor                          IKTrace_2___IKTrace_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x9C8(0x10)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x9D8(0x4)(None)
	uint8                                        Pad_33BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_2___IKTrace_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x9E0(0x60)(None)
	bool                                         IKTrace_2___IKTrace_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0xA40(0x1)(None)
	enum class ETraceTypeQuery                   IKTrace_2___IKTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0xA41(0x1)(None)
	uint8                                        Pad_33BB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IKTrace_2___IKTrace_SphereTraceByTraceChannel_Radius__Const; // 0xA44(0x4)(None)
	struct FVector                               IKTrace_2___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_A__Const; // 0xA48(0x18)(None)
	struct FLinearColor                          IKTrace_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Color__Const; // 0xA60(0x10)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Scale__Const; // 0xA70(0x4)(None)
	uint8                                        Pad_33BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IKTrace_2___IKTrace_Subtract_B__Const;             // 0xA78(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Clamp_Minimum__Const;          // 0xA90(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Clamp_Maximum__Const;          // 0xAA8(0x18)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_3_False__Const; // 0xAC0(0x4)(None)
	uint8                                        Pad_33BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Remap_3_TargetMinimum__Const;         // 0xAC8(0x8)(None)
	float                                        RigVMModel___SpringInterp_7_CriticalDamping__Const; // 0xAD0(0x4)(None)
	uint8                                        Pad_33BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Add_11_B__Const;                      // 0xAD8(0x8)(None)
	struct FRigElementKey                        RigVMModel___CalculatePV_Thigh__Const;             // 0xAE0(0xC)(None)
	struct FRigElementKey                        RigVMModel___CalculatePV_Foot__Const;              // 0xAEC(0xC)(None)
	struct FVector                               RigVMModel___CalculatePV_PVLocalTranslation__Const; // 0xAF8(0x18)(None)
	struct FTransform                            CalculatePV___CalculatePV_Multiply_A__Const;       // 0xB10(0x60)(None)
	enum class ERigVMTransformSpace              CalculatePV___CalculatePV_RigUnit_GetTransform_Space__Const; // 0xB70(0x1)(None)
	bool                                         CalculatePV___CalculatePV_RigUnit_GetTransform_bInitial__Const; // 0xB71(0x1)(None)
	uint8                                        Pad_33BF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CalculatePV___CalculatePV_Add_7_B__Const;          // 0xB78(0x18)(None)
	enum class ERigUnitDebugTransformMode        RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const; // 0xB90(0x1)(None)
	uint8                                        Pad_33C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        RigVMModel___CalculatePV_1_Thigh__Const;           // 0xB94(0xC)(None)
	struct FRigElementKey                        RigVMModel___CalculatePV_1_Foot__Const;            // 0xBA0(0xC)(None)
	uint8                                        Pad_33C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___CalculatePV_1_PVLocalTranslation__Const; // 0xBB0(0x18)(None)
	uint8                                        Pad_33C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CalculatePV_1___CalculatePV_Multiply_A__Const;     // 0xBD0(0x60)(None)
	enum class ERigVMTransformSpace              CalculatePV_1___CalculatePV_RigUnit_GetTransform_Space__Const; // 0xC30(0x1)(None)
	bool                                         CalculatePV_1___CalculatePV_RigUnit_GetTransform_bInitial__Const; // 0xC31(0x1)(None)
	uint8                                        Pad_33C3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CalculatePV_1___CalculatePV_Add_7_B__Const;        // 0xC38(0x18)(None)
	struct FLinearColor                          RigVMModel___RigVMFunction_DebugLineNoSpace_Color__Const; // 0xC50(0x10)(None)
	double                                       RigVMModel___Greater_4_B__Const;                   // 0xC60(0x8)(None)
	uint8                                        Pad_33C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___DISPATCH_RigVMDispatch_If_11_10_True__Const; // 0xC70(0x20)(None)
	struct FRigElementKey                        RigVMModel___TwoBoneIKSimplePerItem_1_1_ItemB__Const; // 0xC90(0xC)(None)
	uint8                                        Pad_33C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___TwoBoneIKSimplePerItem_1_1_PrimaryAxis__Const; // 0xCA0(0x18)(None)
	enum class EControlRigVectorKind             RigVMModel___TwoBoneIKSimplePerItem_1_1_PoleVectorKind__Const; // 0xCB8(0x1)(None)
	uint8                                        Pad_33C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRigElementKey                        RigVMModel___TwoBoneIKSimplePerItem_1_1_PoleVectorSpace__Const; // 0xCBC(0xC)(None)
	float                                        RigVMModel___TwoBoneIKSimplePerItem_1_1_StretchStartRatio__Const; // 0xCC8(0x4)(None)
	float                                        RigVMModel___TwoBoneIKSimplePerItem_1_1_StretchMaximumRatio__Const; // 0xCCC(0x4)(None)
	struct FRigUnit_TwoBoneIKSimple_DebugSettings RigVMModel___TwoBoneIKSimplePerItem_1_1_DebugSettings__Const; // 0xCD0(0x70)(None)
	struct FRigElementKey                        RigVMModel___TwoBoneIKSimplePerItem_1_ItemB__Const; // 0xD40(0xC)(None)
	uint8                                        Pad_33C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___TwoBoneIKSimplePerItem_1_PrimaryAxis__Const; // 0xD50(0x18)(None)
	struct FVector                               RigVMModel___TwoBoneIKSimplePerItem_1_SecondaryAxis__Const; // 0xD68(0x18)(None)

	static class UClass* StaticClass();
	static class URigVMMemory_Literal* GetDefaultObj();

};

// 0x4030 (0x4058 - 0x28)
// RigVMMemoryStorageGeneratorClass Human_Male_TPV_LegIK_CtrlRig.RigVMMemory_Work
class URigVMMemory_Work : public URigVMMemoryStorage
{
public:
	struct FRigPose                              RigVMModel___HierarchyGetPoseItemArray_Pose;       // 0x28(0x70)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FRigElementKey>                RigVMModel___RigUnit_ItemArray_1_Items__IO;        // 0x98(0x10)(AutoWeak, ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Scale_4_Result;                       // 0xA8(0x18)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_11_Transform;    // 0xC0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_11_CachedIndex;  // 0x120(0x10)(SimpleDisplay, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Scale_4_Value;                        // 0x130(0x18)(None)
	float                                        RigVMModel___Scale_4_Factor;                       // 0x148(0x4)(None)
	uint8                                        Pad_33C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetTranslation_3_CachedIndex; // 0x150(0x10)(ContainsInstancedReference, AssetRegistrySearchable, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Scale_4_1_Result;                     // 0x160(0x18)(None)
	uint8                                        Pad_33CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_12_Transform;    // 0x180(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_12_CachedIndex;  // 0x1E0(0x10)(AutoWeak, ContainsInstancedReference, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Scale_4_1_Value;                      // 0x1F0(0x18)(None)
	float                                        RigVMModel___Scale_4_1_Factor;                     // 0x208(0x4)(None)
	uint8                                        Pad_33CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetTranslation_4_CachedIndex; // 0x210(0x10)(AutoWeak, AdvancedDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_4_Transform;     // 0x220(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_4_CachedIndex;   // 0x280(0x10)(ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FTransform                            RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_Transform__IO; // 0x290(0x60)(None)
	struct FVector                               RigVMModel___Scale_Result;                         // 0x2F0(0x18)(None)
	struct FVector                               RigVMModel___Scale_Value__IO;                      // 0x308(0x18)(None)
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_11_1_Result; // 0x320(0x18)(None)
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_6_Result;   // 0x338(0x18)(None)
	struct FVector                               RigVMModel___SpringInterp_4_Result;                // 0x350(0x18)(None)
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_8_Result;   // 0x368(0x8)(None)
	bool                                         RigVMModel___Greater_2_Result;                     // 0x370(0x1)(None)
	uint8                                        Pad_33CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Absolute_Result;                      // 0x378(0x8)(None)
	double                                       RigVMModel___Absolute_Value;                       // 0x380(0x8)(None)
	double                                       RigVMModel___Absolute_1_Result;                    // 0x388(0x8)(None)
	double                                       RigVMModel___Absolute_1_Value;                     // 0x390(0x8)(None)
	float                                        RigVMModel___SpringInterp_4_Strength;              // 0x398(0x4)(None)
	uint8                                        Pad_33CD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___SpringInterp_4_Velocity;              // 0x3A0(0x18)(None)
	TArray<struct FVector>                       RigVMModel___SpringInterp_4_SimulatedResult;       // 0x3B8(0x10)(AssetRegistrySearchable, SimpleDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FVectorSpringState>            RigVMModel___SpringInterp_4_SpringState;           // 0x3C8(0x10)(AutoWeak, SimpleDisplay, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_18_Result;                        // 0x3D8(0x18)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_10_Transform;    // 0x3F0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_10_CachedIndex;  // 0x450(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_18_A;                             // 0x460(0x18)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetTranslation_2_CachedIndex; // 0x478(0x10)(AssetRegistrySearchable, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33CE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_4_1_Transform;   // 0x490(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_4_1_CachedIndex; // 0x4F0(0x10)(ContainsInstancedReference, BlueprintCallable, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FTransform                            RigVMModel___RigVMFunction_DebugRectangleNoSpace_1_1_Transform__IO; // 0x500(0x60)(None)
	struct FVector                               RigVMModel___RigVMFunction_DebugLineNoSpace_2_B;   // 0x560(0x18)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_4_BlockToRun; // 0x578(0x8)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_2_Result; // 0x580(0x4)(None)
	float                                        RigVMModel___RigVMFunction_MathBoolToFloat_Result; // 0x584(0x4)(None)
	float                                        RigVMModel___SpringInterp_5_Result;                // 0x588(0x4)(None)
	float                                        RigVMModel___SpringInterp_5_Velocity;              // 0x58C(0x4)(None)
	TArray<float>                                RigVMModel___SpringInterp_5_SimulatedResult;       // 0x590(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_5_SpringState;           // 0x5A0(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	bool                                         RigVMModel___Greater_Result;                       // 0x5B0(0x1)(None)
	uint8                                        Pad_33CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Clamp_2_Result;                       // 0x5B8(0x8)(None)
	double                                       RigVMModel___Subtract_3_Result;                    // 0x5C0(0x8)(None)
	bool                                         RigVMModel___IKTrace_0_Hit;                        // 0x5C8(0x1)(None)
	uint8                                        Pad_33D0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_0_HitLocation;                // 0x5D0(0x18)(None)
	double                                       RigVMModel___IKTrace_0_Offset;                     // 0x5E8(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_0_HitNormal;                  // 0x5F0(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_2_1_Result; // 0x608(0x18)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_9_Transform;     // 0x620(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_9_CachedIndex;   // 0x680(0x10)(ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, Protected, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FTransform                            RigVMModel___RigVMFunction_MathTransformTransformVector_2_1_Transform__IO; // 0x690(0x60)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_3_1_Result;                // 0x6F0(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0x708(0x18)(None)
	struct FTransform                            IKTrace_0___IKTrace_GetTransform_Transform;        // 0x720(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0___IKTrace_GetTransform_CachedIndex;      // 0x780(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0x790(0x4)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0x794(0x4)(None)
	uint8                                        Pad_33D1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0___IKTrace_RigUnit_GetTransform_Transform; // 0x7A0(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0___IKTrace_RigUnit_GetTransform_CachedIndex; // 0x800(0x10)(ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0x810(0x4)(None)
	uint8                                        Pad_33D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0x818(0x18)(None)
	double                                       IKTrace_0___IKTrace_Multiply_1_Result;             // 0x830(0x8)(None)
	double                                       IKTrace_0___IKTrace_Multiply_2_1_Result;           // 0x838(0x8)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_1_Result;                  // 0x840(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_3_Result;                  // 0x858(0x18)(None)
	double                                       IKTrace_0___IKTrace_Multiply_Result;               // 0x870(0x8)(None)
	double                                       IKTrace_0___IKTrace_Multiply_2_Result;             // 0x878(0x8)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_1_B__IO;                   // 0x880(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_Result;                    // 0x898(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_B__IO;                     // 0x8B0(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0x8C8(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0x8E0(0x18)(None)
	struct FHitResult                            IKTrace_0___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0x8F8(0xF0)(ZeroConstructor)
	uint8                                        Pad_33D3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_0___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x9F0(0x20)(None)
	struct FVector                               IKTrace_0___IKTrace_From_World_1_Global;           // 0xA10(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0xA28(0x18)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0xA40(0x4)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0xA44(0x4)(None)
	float                                        IKTrace_0___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0xA48(0x4)(None)
	uint8                                        Pad_33D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0xA50(0x60)(None)
	struct FVector                               IKTrace_0___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0xAB0(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Subtract_1_Result;             // 0xAC8(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_2_Result;                  // 0xAE0(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Add_2_B__IO;                   // 0xAF8(0x18)(None)
	struct FVector                               IKTrace_0___IKTrace_Clamp_Result;                  // 0xB10(0x18)(None)
	bool                                         RigVMModel___IKTrace_0_1_Hit;                      // 0xB28(0x1)(None)
	uint8                                        Pad_33D5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_0_1_HitLocation;              // 0xB30(0x18)(None)
	double                                       RigVMModel___IKTrace_0_1_Offset;                   // 0xB48(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_0_1_HitNormal;                // 0xB50(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_2_Result; // 0xB68(0x18)(None)
	struct FTransform                            RigVMModel___RigVMFunction_MathTransformTransformVector_2_Transform__IO; // 0xB80(0x60)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_3_1_Result;              // 0xBE0(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0xBF8(0x18)(None)
	struct FTransform                            IKTrace_0_1___IKTrace_GetTransform_Transform;      // 0xC10(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_1___IKTrace_GetTransform_CachedIndex;    // 0xC70(0x10)(SimpleDisplay, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0xC80(0x4)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0xC84(0x4)(None)
	uint8                                        Pad_33D6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_1___IKTrace_RigUnit_GetTransform_Transform; // 0xC90(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_1___IKTrace_RigUnit_GetTransform_CachedIndex; // 0xCF0(0x10)(AutoWeak, AssetRegistrySearchable, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0xD00(0x4)(None)
	uint8                                        Pad_33D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0xD08(0x18)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_1_Result;           // 0xD20(0x8)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_2_1_Result;         // 0xD28(0x8)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_1_Result;                // 0xD30(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_3_Result;                // 0xD48(0x18)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_Result;             // 0xD60(0x8)(None)
	double                                       IKTrace_0_1___IKTrace_Multiply_2_Result;           // 0xD68(0x8)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_1_B__IO;                 // 0xD70(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_Result;                  // 0xD88(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_B__IO;                   // 0xDA0(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0xDB8(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0xDD0(0x18)(None)
	struct FHitResult                            IKTrace_0_1___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0xDE8(0xF0)(ZeroConstructor)
	uint8                                        Pad_33D8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_0_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0xEE0(0x20)(None)
	struct FVector                               IKTrace_0_1___IKTrace_From_World_1_Global;         // 0xF00(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0xF18(0x18)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0xF30(0x4)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0xF34(0x4)(None)
	float                                        IKTrace_0_1___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0xF38(0x4)(None)
	uint8                                        Pad_33D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0xF40(0x60)(None)
	struct FVector                               IKTrace_0_1___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0xFA0(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Subtract_1_Result;           // 0xFB8(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_2_Result;                // 0xFD0(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Add_2_B__IO;                 // 0xFE8(0x18)(None)
	struct FVector                               IKTrace_0_1___IKTrace_Clamp_Result;                // 0x1000(0x18)(None)
	bool                                         RigVMModel___IKTrace_0_2_Hit;                      // 0x1018(0x1)(None)
	uint8                                        Pad_33DA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_0_2_HitLocation;              // 0x1020(0x18)(None)
	double                                       RigVMModel___IKTrace_0_2_Offset;                   // 0x1038(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_0_2_HitNormal;                // 0x1040(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_Result; // 0x1058(0x18)(None)
	struct FTransform                            RigVMModel___RigVMFunction_MathTransformTransformVector_Transform__IO; // 0x1070(0x60)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_3_1_Result;              // 0x10D0(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0x10E8(0x18)(None)
	struct FTransform                            IKTrace_0_2___IKTrace_GetTransform_Transform;      // 0x1100(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_2___IKTrace_GetTransform_CachedIndex;    // 0x1160(0x10)(AutoWeak, ContainsInstancedReference, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0x1170(0x4)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0x1174(0x4)(None)
	uint8                                        Pad_33DB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2___IKTrace_RigUnit_GetTransform_Transform; // 0x1180(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_2___IKTrace_RigUnit_GetTransform_CachedIndex; // 0x11E0(0x10)(AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0x11F0(0x4)(None)
	uint8                                        Pad_33DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0x11F8(0x18)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_1_Result;           // 0x1210(0x8)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_2_1_Result;         // 0x1218(0x8)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_1_Result;                // 0x1220(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_3_Result;                // 0x1238(0x18)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_Result;             // 0x1250(0x8)(None)
	double                                       IKTrace_0_2___IKTrace_Multiply_2_Result;           // 0x1258(0x8)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_1_B__IO;                 // 0x1260(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_Result;                  // 0x1278(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_B__IO;                   // 0x1290(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0x12A8(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0x12C0(0x18)(None)
	struct FHitResult                            IKTrace_0_2___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0x12D8(0xF0)(ZeroConstructor)
	uint8                                        Pad_33DD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_0_2___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x13D0(0x20)(None)
	struct FVector                               IKTrace_0_2___IKTrace_From_World_1_Global;         // 0x13F0(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0x1408(0x18)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0x1420(0x4)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0x1424(0x4)(None)
	float                                        IKTrace_0_2___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0x1428(0x4)(None)
	uint8                                        Pad_33DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0x1430(0x60)(None)
	struct FVector                               IKTrace_0_2___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0x1490(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Subtract_1_Result;           // 0x14A8(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_2_Result;                // 0x14C0(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Add_2_B__IO;                 // 0x14D8(0x18)(None)
	struct FVector                               IKTrace_0_2___IKTrace_Clamp_Result;                // 0x14F0(0x18)(None)
	bool                                         RigVMModel___IKTrace_0_2_1_Hit;                    // 0x1508(0x1)(None)
	uint8                                        Pad_33DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_0_2_1_HitLocation;            // 0x1510(0x18)(None)
	double                                       RigVMModel___IKTrace_0_2_1_Offset;                 // 0x1528(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_0_2_1_HitNormal;              // 0x1530(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_1_Result; // 0x1548(0x18)(None)
	struct FTransform                            RigVMModel___RigVMFunction_MathTransformTransformVector_1_Transform__IO; // 0x1560(0x60)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_3_1_Result;            // 0x15C0(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0x15D8(0x18)(None)
	struct FTransform                            IKTrace_0_2_1___IKTrace_GetTransform_Transform;    // 0x15F0(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_2_1___IKTrace_GetTransform_CachedIndex;  // 0x1650(0x10)(ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0x1660(0x4)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0x1664(0x4)(None)
	uint8                                        Pad_33E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2_1___IKTrace_RigUnit_GetTransform_Transform; // 0x1670(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_0_2_1___IKTrace_RigUnit_GetTransform_CachedIndex; // 0x16D0(0x10)(AutoWeak, ContainsInstancedReference, SimpleDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0x16E0(0x4)(None)
	uint8                                        Pad_33E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0x16E8(0x18)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_1_Result;         // 0x1700(0x8)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_2_1_Result;       // 0x1708(0x8)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_1_Result;              // 0x1710(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_3_Result;              // 0x1728(0x18)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_Result;           // 0x1740(0x8)(None)
	double                                       IKTrace_0_2_1___IKTrace_Multiply_2_Result;         // 0x1748(0x8)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_1_B__IO;               // 0x1750(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_Result;                // 0x1768(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_B__IO;                 // 0x1780(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0x1798(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0x17B0(0x18)(None)
	struct FHitResult                            IKTrace_0_2_1___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0x17C8(0xF0)(ZeroConstructor)
	uint8                                        Pad_33E2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_0_2_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x18C0(0x20)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_From_World_1_Global;       // 0x18E0(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0x18F8(0x18)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0x1910(0x4)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0x1914(0x4)(None)
	float                                        IKTrace_0_2_1___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0x1918(0x4)(None)
	uint8                                        Pad_33E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_0_2_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0x1920(0x60)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0x1980(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Subtract_1_Result;         // 0x1998(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_2_Result;              // 0x19B0(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Add_2_B__IO;               // 0x19C8(0x18)(None)
	struct FVector                               IKTrace_0_2_1___IKTrace_Clamp_Result;              // 0x19E0(0x18)(None)
	uint8                                        Pad_33E4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___Cast_Result;                          // 0x1A00(0x60)(None)
	struct FMatrix                               RigVMModel___RigVMFunction_MathMatrixFromVectors_Result; // 0x1A60(0x80)(None)
	struct FVector                               RigVMModel___Unit_1_Result;                        // 0x1AE0(0x18)(None)
	struct FVector                               RigVMModel___Subtract_Result;                      // 0x1AF8(0x18)(None)
	struct FVector                               RigVMModel___Subtract_1_Result;                    // 0x1B10(0x18)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorCross_Result; // 0x1B28(0x18)(None)
	struct FVector                               RigVMModel___Unit_Result;                          // 0x1B40(0x18)(None)
	uint8                                        Pad_33E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___DISPATCH_RigVMDispatch_If_11_5_Result; // 0x1B60(0x20)(None)
	struct FQuat                                 RigVMModel___To_World_1_World;                     // 0x1B80(0x20)(None)
	struct FQuat                                 RigVMModel___To_World_1_Value;                     // 0x1BA0(0x20)(None)
	struct FQuat                                 RigVMModel___SpringInterpQuaternionV2_1_Result;    // 0x1BC0(0x20)(None)
	struct FVector                               RigVMModel___SpringInterpQuaternionV2_1_AngularVelocity; // 0x1BE0(0x18)(None)
	TArray<struct FQuat>                         RigVMModel___SpringInterpQuaternionV2_1_SimulatedResult; // 0x1BF8(0x10)(AutoWeak, SimpleDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FQuaternionSpringState>        RigVMModel___SpringInterpQuaternionV2_1_SpringState; // 0x1C08(0x10)(ContainsInstancedReference, AssetRegistrySearchable, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33E6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___RigVMFunction_MathQuaternionFromTwoVectors_2_Result; // 0x1C20(0x20)(None)
	struct FVector                               RigVMModel___Rotate_Vector_3_1_Result;             // 0x1C40(0x18)(None)
	uint8                                        Pad_33E7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___Rotate_Vector_3_1_Transform;          // 0x1C60(0x20)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorMake_Result;  // 0x1C80(0x18)(None)
	double                                       RigVMModel___Clamp_4_Result;                       // 0x1C98(0x8)(None)
	struct FVector                               RigVMModel___Rotate_Vector_3_Result;               // 0x1CA0(0x18)(None)
	uint8                                        Pad_33E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___Inverse_Result;                       // 0x1CC0(0x20)(None)
	struct FVector                               RigVMModel___RigVMFunction_MathTransformTransformVector_1_1_Result; // 0x1CE0(0x18)(None)
	uint8                                        Pad_33E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___From_World_1_Global;                  // 0x1D00(0x20)(None)
	struct FTransform                            RigVMModel___RigVMFunction_MathTransformTransformVector_1_1_Transform__IO; // 0x1D20(0x60)(None)
	double                                       RigVMModel___Clamp_4_Value;                        // 0x1D80(0x8)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorMake_X;       // 0x1D88(0x4)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorMake_Y;       // 0x1D8C(0x4)(None)
	double                                       RigVMModel___Clamp_4_2_Result;                     // 0x1D90(0x8)(None)
	double                                       RigVMModel___Clamp_4_2_Value;                      // 0x1D98(0x8)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorMake_Z;       // 0x1DA0(0x4)(None)
	uint8                                        Pad_33EA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___Multiply_5_Result;                    // 0x1DB0(0x60)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_8_Transform;     // 0x1E10(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_8_CachedIndex;   // 0x1E70(0x10)(AssetRegistrySearchable, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FTransform                            RigVMModel___Multiply_5_B__IO;                     // 0x1E80(0x60)(None)
	struct FQuat                                 RigVMModel___RigUnit_SetRotation_2_Value;          // 0x1EE0(0x20)(None)
	float                                        RigVMModel___RigUnit_SetRotation_2_Weight;         // 0x1F00(0x4)(None)
	uint8                                        Pad_33EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetRotation_2_CachedIndex;    // 0x1F08(0x10)(AutoWeak, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___RigVMFunction_DebugLineNoSpace_1_A;   // 0x1F18(0x18)(None)
	struct FVector                               RigVMModel___Add_15_Result;                        // 0x1F30(0x18)(None)
	struct FVector                               RigVMModel___Scale_2_Result;                       // 0x1F48(0x18)(None)
	struct FVector                               RigVMModel___Add_15_1_Result;                      // 0x1F60(0x18)(None)
	struct FVector                               RigVMModel___Scale_2_1_Result;                     // 0x1F78(0x18)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_8_Result; // 0x1F90(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_1_Result;            // 0x1F94(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_1_Current;           // 0x1F98(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_1_Velocity;          // 0x1F9C(0x4)(None)
	TArray<float>                                RigVMModel___SpringInterp_7_1_1_SimulatedResult;   // 0x1FA0(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_7_1_1_SpringState;       // 0x1FB0(0x10)(AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_7_Result; // 0x1FC0(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_Result;              // 0x1FC4(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_Current;             // 0x1FC8(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_1_Velocity;            // 0x1FCC(0x4)(None)
	TArray<float>                                RigVMModel___SpringInterp_7_1_SimulatedResult;     // 0x1FD0(0x10)(ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_7_1_SpringState;         // 0x1FE0(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_4_1_Result;                       // 0x1FF0(0x18)(None)
	uint8                                        Pad_33EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_2_2_Transform;   // 0x2010(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_2_2_CachedIndex; // 0x2070(0x10)(AutoWeak, AssetRegistrySearchable, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_4_1_A;                            // 0x2080(0x18)(None)
	double                                       RigVMModel___Minimum_5_1_Result;                   // 0x2098(0x8)(None)
	struct FVector                               RigVMModel___Add_4_1_B__IO;                        // 0x20A0(0x18)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetTranslation_5_CachedIndex; // 0x20B8(0x10)(ContainsInstancedReference, AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	double                                       RigVMModel___Clamp_3_Result;                       // 0x20C8(0x8)(None)
	bool                                         RigVMModel___IKTrace_1_Hit;                        // 0x20D0(0x1)(None)
	uint8                                        Pad_33ED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_1_HitLocation;                // 0x20D8(0x18)(None)
	double                                       RigVMModel___IKTrace_1_Offset;                     // 0x20F0(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_1_HitNormal;                  // 0x20F8(0x18)(None)
	struct FVector                               RigVMModel___Add_9_Add_9_1_Result;                 // 0x2110(0x18)(None)
	struct FVector                               RigVMModel___Add_9_Add_9_Result;                   // 0x2128(0x18)(None)
	struct FVector                               RigVMModel___Scale_3_Result;                       // 0x2140(0x18)(None)
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_4_Result;   // 0x2158(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_3_1_Result;                // 0x2170(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0x2188(0x18)(None)
	struct FTransform                            IKTrace_1___IKTrace_GetTransform_Transform;        // 0x21A0(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_1___IKTrace_GetTransform_CachedIndex;      // 0x2200(0x10)(AdvancedDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0x2210(0x4)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0x2214(0x4)(None)
	uint8                                        Pad_33EE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_1___IKTrace_RigUnit_GetTransform_Transform; // 0x2220(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_1___IKTrace_RigUnit_GetTransform_CachedIndex; // 0x2280(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0x2290(0x4)(None)
	uint8                                        Pad_33EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0x2298(0x18)(None)
	double                                       IKTrace_1___IKTrace_Multiply_1_Result;             // 0x22B0(0x8)(None)
	double                                       IKTrace_1___IKTrace_Multiply_2_1_Result;           // 0x22B8(0x8)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_1_Result;                  // 0x22C0(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_3_Result;                  // 0x22D8(0x18)(None)
	double                                       IKTrace_1___IKTrace_Multiply_Result;               // 0x22F0(0x8)(None)
	double                                       IKTrace_1___IKTrace_Multiply_2_Result;             // 0x22F8(0x8)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_1_B__IO;                   // 0x2300(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_Result;                    // 0x2318(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_B__IO;                     // 0x2330(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0x2348(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0x2360(0x18)(None)
	struct FHitResult                            IKTrace_1___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0x2378(0xF0)(ZeroConstructor)
	uint8                                        Pad_33F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_1___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x2470(0x20)(None)
	struct FVector                               IKTrace_1___IKTrace_From_World_1_Global;           // 0x2490(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0x24A8(0x18)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0x24C0(0x4)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0x24C4(0x4)(None)
	float                                        IKTrace_1___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0x24C8(0x4)(None)
	uint8                                        Pad_33F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_1___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0x24D0(0x60)(None)
	struct FVector                               IKTrace_1___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0x2530(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Subtract_1_Result;             // 0x2548(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_2_Result;                  // 0x2560(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Add_2_B__IO;                   // 0x2578(0x18)(None)
	struct FVector                               IKTrace_1___IKTrace_Clamp_Result;                  // 0x2590(0x18)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_10_Result;  // 0x25A8(0x4)(None)
	uint8                                        Pad_33F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Multiply_7_Result;                    // 0x25B0(0x8)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_10_True;    // 0x25B8(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_Result;                // 0x25BC(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_Target;                // 0x25C0(0x4)(None)
	float                                        RigVMModel___Multiply_9_Result;                    // 0x25C4(0x4)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_7_Result;   // 0x25C8(0x4)(None)
	bool                                         RigVMModel___Greater_1_Result;                     // 0x25CC(0x1)(None)
	uint8                                        Pad_33F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_9_Result;   // 0x25D0(0x8)(None)
	bool                                         RigVMModel___Less_1_Result;                        // 0x25D8(0x1)(None)
	uint8                                        Pad_33F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Absolute_2_Result;                    // 0x25E0(0x8)(None)
	double                                       RigVMModel___Subtract_4_Result;                    // 0x25E8(0x8)(None)
	float                                        RigVMModel___Multiply_9_B;                         // 0x25F0(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_Current;               // 0x25F4(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_Velocity;              // 0x25F8(0x4)(None)
	uint8                                        Pad_33F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RigVMModel___SpringInterp_1_SimulatedResult;       // 0x2600(0x10)(AutoWeak, ContainsInstancedReference, SimpleDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_1_SpringState;           // 0x2610(0x10)(SimpleDisplay, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FQuat                                 RigVMModel___Inverse_1_Result;                     // 0x2620(0x20)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_3_Transform;     // 0x2640(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_3_CachedIndex;   // 0x26A0(0x10)(ContainsInstancedReference, AssetRegistrySearchable, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FQuat                                 RigVMModel___Inverse_1_Value;                      // 0x26B0(0x20)(None)
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_11_4_Result; // 0x26D0(0x18)(None)
	struct FVector                               RigVMModel___Rotate_Vector_Result;                 // 0x26E8(0x18)(None)
	struct FVector                               RigVMModel___SpringInterp_3_Result;                // 0x2700(0x18)(None)
	struct FVector                               RigVMModel___SpringInterp_3_Velocity;              // 0x2718(0x18)(None)
	TArray<struct FVector>                       RigVMModel___SpringInterp_3_SimulatedResult;       // 0x2730(0x10)(AutoWeak, ContainsInstancedReference, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FVectorSpringState>            RigVMModel___SpringInterp_3_SpringState;           // 0x2740(0x10)(AutoWeak, Protected, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_Result;                           // 0x2750(0x18)(None)
	uint8                                        Pad_33F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___GetTransform_2_Transform;             // 0x2770(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___GetTransform_2_CachedIndex;           // 0x27D0(0x10)(ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_A;                                // 0x27E0(0x18)(None)
	struct FVector                               RigVMModel___Add_B__IO;                            // 0x27F8(0x18)(None)
	struct FQuat                                 RigVMModel___Multiply_2_Result;                    // 0x2810(0x20)(None)
	struct FQuat                                 RigVMModel___RigVMFunction_MathQuaternionFromTwoVectors_Result; // 0x2830(0x20)(None)
	struct FVector                               RigVMModel___Rotate_Vector_2_Result;               // 0x2850(0x18)(None)
	uint8                                        Pad_33F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_3_1_Transform;   // 0x2870(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_3_1_CachedIndex; // 0x28D0(0x10)(AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FQuat                                 RigVMModel___Rotate_Vector_2_Transform;            // 0x28E0(0x20)(None)
	struct FQuat                                 RigVMModel___Multiply_2_B;                         // 0x2900(0x20)(None)
	bool                                         RigVMModel___IKTrace_2_Hit;                        // 0x2920(0x1)(None)
	uint8                                        Pad_33F8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RigVMModel___IKTrace_2_HitLocation;                // 0x2928(0x18)(None)
	double                                       RigVMModel___IKTrace_2_Offset;                     // 0x2940(0x8)(None)
	struct FVector                               RigVMModel___IKTrace_2_HitNormal;                  // 0x2948(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_3_1_Result;                // 0x2960(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_1_Result; // 0x2978(0x18)(None)
	struct FTransform                            IKTrace_2___IKTrace_GetTransform_Transform;        // 0x2990(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_2___IKTrace_GetTransform_CachedIndex;      // 0x29F0(0x10)(AutoWeak, SimpleDisplay, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_1_X; // 0x2A00(0x4)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_1_Y; // 0x2A04(0x4)(None)
	uint8                                        Pad_33F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_2___IKTrace_RigUnit_GetTransform_Transform; // 0x2A10(0x60)(None)
	TArray<struct FCachedRigElement>             IKTrace_2___IKTrace_RigUnit_GetTransform_CachedIndex; // 0x2A70(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_1_Z; // 0x2A80(0x4)(None)
	uint8                                        Pad_33FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalVariable__IKTrace_FootBase;                   // 0x2A88(0x18)(None)
	double                                       IKTrace_2___IKTrace_Multiply_1_Result;             // 0x2AA0(0x8)(None)
	double                                       IKTrace_2___IKTrace_Multiply_2_1_Result;           // 0x2AA8(0x8)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_1_Result;                  // 0x2AB0(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_3_Result;                  // 0x2AC8(0x18)(None)
	double                                       IKTrace_2___IKTrace_Multiply_Result;               // 0x2AE0(0x8)(None)
	double                                       IKTrace_2___IKTrace_Multiply_2_Result;             // 0x2AE8(0x8)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_1_B__IO;                   // 0x2AF0(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_Result;                    // 0x2B08(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_B__IO;                     // 0x2B20(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_SphereTraceByTraceChannel_HitNormal; // 0x2B38(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_SphereTraceByTraceChannel_HitLocation; // 0x2B50(0x18)(None)
	struct FHitResult                            IKTrace_2___IKTrace_SphereTraceByTraceChannel_WorldSpaceHitResult; // 0x2B68(0xF0)(None)
	uint8                                        Pad_33FB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 IKTrace_2___IKTrace_RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x2C60(0x20)(None)
	struct FVector                               IKTrace_2___IKTrace_From_World_1_Global;           // 0x2C80(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_2_Result; // 0x2C98(0x18)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_2_X; // 0x2CB0(0x4)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_2_Y; // 0x2CB4(0x4)(None)
	float                                        IKTrace_2___IKTrace_RigVMFunction_MathVectorMake_2_Z; // 0x2CB8(0x4)(None)
	uint8                                        Pad_33FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IKTrace_2___IKTrace_RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0x2CC0(0x60)(None)
	struct FVector                               IKTrace_2___IKTrace_DISPATCH_RigVMDispatch_If_Result; // 0x2D20(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Subtract_1_Result;             // 0x2D38(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_2_Result;                  // 0x2D50(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Add_2_B__IO;                   // 0x2D68(0x18)(None)
	struct FVector                               IKTrace_2___IKTrace_Clamp_Result;                  // 0x2D80(0x18)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_10_1_Result; // 0x2D98(0x4)(None)
	uint8                                        Pad_33FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Multiply_7_1_Result;                  // 0x2DA0(0x8)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_10_1_True;  // 0x2DA8(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_1_Result;              // 0x2DAC(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_1_Target;              // 0x2DB0(0x4)(None)
	float                                        RigVMModel___Multiply_10_Result;                   // 0x2DB4(0x4)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_7_1_Result; // 0x2DB8(0x4)(None)
	bool                                         RigVMModel___Greater_1_1_Result;                   // 0x2DBC(0x1)(None)
	uint8                                        Pad_33FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_9_1_Result; // 0x2DC0(0x8)(None)
	bool                                         RigVMModel___Less_1_1_Result;                      // 0x2DC8(0x1)(None)
	uint8                                        Pad_33FF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Absolute_2_1_Result;                  // 0x2DD0(0x8)(None)
	double                                       RigVMModel___Subtract_4_1_Result;                  // 0x2DD8(0x8)(None)
	float                                        RigVMModel___Multiply_10_B;                        // 0x2DE0(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_1_Current;             // 0x2DE4(0x4)(None)
	float                                        RigVMModel___SpringInterp_1_1_Velocity;            // 0x2DE8(0x4)(None)
	uint8                                        Pad_3400[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RigVMModel___SpringInterp_1_1_SimulatedResult;     // 0x2DF0(0x10)(AssetRegistrySearchable, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_1_1_SpringState;         // 0x2E00(0x10)(ContainsInstancedReference, AdvancedDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___DISPATCH_RigVMDispatch_If_11_3_Result; // 0x2E10(0x18)(None)
	struct FVector                               RigVMModel___Rotate_Vector_1_Result;               // 0x2E28(0x18)(None)
	struct FVector                               RigVMModel___SpringInterp_2_Result;                // 0x2E40(0x18)(None)
	struct FVector                               RigVMModel___SpringInterp_2_Velocity;              // 0x2E58(0x18)(None)
	TArray<struct FVector>                       RigVMModel___SpringInterp_2_SimulatedResult;       // 0x2E70(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FVectorSpringState>            RigVMModel___SpringInterp_2_SpringState;           // 0x2E80(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_1_Result;                         // 0x2E90(0x18)(None)
	uint8                                        Pad_3401[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___GetTransform_2_1_Transform;           // 0x2EB0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___GetTransform_2_1_CachedIndex;         // 0x2F10(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_1_A;                              // 0x2F20(0x18)(None)
	struct FVector                               RigVMModel___Add_1_B__IO;                          // 0x2F38(0x18)(None)
	struct FQuat                                 RigVMModel___Multiply_2_1_Result;                  // 0x2F50(0x20)(None)
	struct FQuat                                 RigVMModel___RigVMFunction_MathQuaternionFromTwoVectors_1_Result; // 0x2F70(0x20)(None)
	struct FVector                               RigVMModel___Rotate_Vector_2_1_Result;             // 0x2F90(0x18)(None)
	uint8                                        Pad_3402[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___Multiply_2_1_B;                       // 0x2FB0(0x20)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_Result;  // 0x2FD0(0x4)(None)
	uint8                                        Pad_3403[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_2_Result;   // 0x2FD8(0x8)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_True;    // 0x2FE0(0x4)(None)
	float                                        RigVMModel___SpringInterp_Result;                  // 0x2FE4(0x4)(None)
	float                                        RigVMModel___SpringInterp_Target;                  // 0x2FE8(0x4)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_3_Result;   // 0x2FEC(0x4)(None)
	float                                        RigVMModel___SpringInterp_Current;                 // 0x2FF0(0x4)(None)
	float                                        RigVMModel___SpringInterp_Velocity;                // 0x2FF4(0x4)(None)
	TArray<float>                                RigVMModel___SpringInterp_SimulatedResult;         // 0x2FF8(0x10)(AutoWeak, ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_SpringState;             // 0x3008(0x10)(SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	bool                                         RigVMModel___Less_Result;                          // 0x3018(0x1)(None)
	uint8                                        Pad_3404[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Minimum_2_Result;                     // 0x3020(0x8)(None)
	double                                       RigVMModel___Minimum_Result;                       // 0x3028(0x8)(None)
	double                                       RigVMModel___Add_2_Result;                         // 0x3030(0x8)(None)
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_Result;     // 0x3038(0x8)(None)
	double                                       RigVMModel___Minimum_1_Result;                     // 0x3040(0x8)(None)
	double                                       RigVMModel___Add_2_1_Result;                       // 0x3048(0x8)(None)
	double                                       RigVMModel___DISPATCH_RigVMDispatch_If_1_Result;   // 0x3050(0x8)(None)
	double                                       RigVMModel___Add_3_Result;                         // 0x3058(0x8)(None)
	bool                                         RigVMModel___Greater_3_Result;                     // 0x3060(0x1)(None)
	uint8                                        Pad_3405[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RigVMModel___SpringInterp_8_Result;                // 0x3064(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_Target;                // 0x3068(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_Current;               // 0x306C(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_Velocity;              // 0x3070(0x4)(None)
	uint8                                        Pad_3406[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RigVMModel___SpringInterp_8_SimulatedResult;       // 0x3078(0x10)(ContainsInstancedReference, AssetRegistrySearchable, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_8_SpringState;           // 0x3088(0x10)(AutoWeak, ContainsInstancedReference, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_6_BlockToRun; // 0x3098(0x8)(None)
	float                                        RigVMModel___Minimum_4_Result;                     // 0x30A0(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_Result;                // 0x30A4(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_Target;                // 0x30A8(0x4)(None)
	uint8                                        Pad_3407[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RigVMModel___Remap_3_Result;                       // 0x30B0(0x8)(None)
	float                                        RigVMModel___SpringInterp_7_Strength;              // 0x30B8(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_Current;               // 0x30BC(0x4)(None)
	float                                        RigVMModel___SpringInterp_7_Velocity;              // 0x30C0(0x4)(None)
	uint8                                        Pad_3408[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RigVMModel___SpringInterp_7_SimulatedResult;       // 0x30C8(0x10)(AutoWeak, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_7_SpringState;           // 0x30D8(0x10)(ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	double                                       RigVMModel___Add_11_Result;                        // 0x30E8(0x8)(None)
	float                                        RigVMModel___Minimum_4_B;                          // 0x30F0(0x4)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_9_Result; // 0x30F4(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_1_Result;              // 0x30F8(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_1_Current;             // 0x30FC(0x4)(None)
	float                                        RigVMModel___SpringInterp_8_1_Velocity;            // 0x3100(0x4)(None)
	uint8                                        Pad_3409[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RigVMModel___SpringInterp_8_1_SimulatedResult;     // 0x3108(0x10)(AssetRegistrySearchable, SimpleDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	TArray<struct FFloatSpringState>             RigVMModel___SpringInterp_8_1_SpringState;         // 0x3118(0x10)(AutoWeak, SimpleDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_2_1_Result; // 0x3128(0x4)(None)
	float                                        RigVMModel___DISPATCH_RigVMDispatch_If_11_2_1_True; // 0x312C(0x4)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_5_BlockToRun; // 0x3130(0x8)(None)
	struct FVector                               RigVMModel___CalculatePV_Result;                   // 0x3138(0x18)(None)
	struct FTransform                            CalculatePV___CalculatePV_Multiply_Result;         // 0x3150(0x60)(None)
	struct FTransform                            CalculatePV___CalculatePV_Multiply_A__IO;          // 0x31B0(0x60)(None)
	struct FTransform                            CalculatePV___CalculatePV_RigUnit_GetTransform_Transform; // 0x3210(0x60)(None)
	TArray<struct FCachedRigElement>             CalculatePV___CalculatePV_RigUnit_GetTransform_CachedIndex; // 0x3270(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               CalculatePV___CalculatePV_Add_7_A;                 // 0x3280(0x18)(None)
	struct FVector                               CalculatePV___CalculatePV_Add_7_B__IO;             // 0x3298(0x18)(None)
	struct FTransform                            RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO; // 0x32B0(0x60)(None)
	struct FVector                               RigVMModel___CalculatePV_1_Result;                 // 0x3310(0x18)(None)
	uint8                                        Pad_340A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CalculatePV_1___CalculatePV_Multiply_Result;       // 0x3330(0x60)(None)
	struct FTransform                            CalculatePV_1___CalculatePV_Multiply_A__IO;        // 0x3390(0x60)(None)
	struct FTransform                            CalculatePV_1___CalculatePV_RigUnit_GetTransform_Transform; // 0x33F0(0x60)(None)
	TArray<struct FCachedRigElement>             CalculatePV_1___CalculatePV_RigUnit_GetTransform_CachedIndex; // 0x3450(0x10)(AssetRegistrySearchable, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               CalculatePV_1___CalculatePV_Add_7_A;               // 0x3460(0x18)(None)
	struct FVector                               CalculatePV_1___CalculatePV_Add_7_B__IO;           // 0x3478(0x18)(None)
	struct FTransform                            RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Transform__IO; // 0x3490(0x60)(None)
	struct FVector                               RigVMModel___Add_4_Result;                         // 0x34F0(0x18)(None)
	uint8                                        Pad_340B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x3510(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x3570(0x10)(ContainsInstancedReference, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	struct FVector                               RigVMModel___Add_4_A;                              // 0x3580(0x18)(None)
	double                                       RigVMModel___Minimum_5_Result;                     // 0x3598(0x8)(None)
	struct FVector                               RigVMModel___Add_4_B__IO;                          // 0x35A0(0x18)(None)
	uint8                                        Pad_340C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigVMFunction_DebugRectangleNoSpace_Transform__IO; // 0x35C0(0x60)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_BlockToRun; // 0x3620(0x8)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetTranslation_CachedIndex;   // 0x3628(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic, NativeAccessSpecifierPrivate)
	bool                                         RigVMModel___Greater_4_Result;                     // 0x3638(0x1)(None)
	uint8                                        Pad_340D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 RigVMModel___DISPATCH_RigVMDispatch_If_11_10_Result; // 0x3640(0x20)(None)
	struct FQuat                                 RigVMModel___SpringInterpQuaternionV2_Result;      // 0x3660(0x20)(None)
	struct FVector                               RigVMModel___SpringInterpQuaternionV2_AngularVelocity; // 0x3680(0x18)(None)
	TArray<struct FQuat>                         RigVMModel___SpringInterpQuaternionV2_SimulatedResult; // 0x3698(0x10)(AutoWeak, AdvancedDisplay, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FQuaternionSpringState>        RigVMModel___SpringInterpQuaternionV2_SpringState; // 0x36A8(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	uint8                                        Pad_340E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___Multiply_5_1_Result;                  // 0x36C0(0x60)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_8_1_Transform;   // 0x3720(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_8_1_CachedIndex; // 0x3780(0x10)(AssetRegistrySearchable, SimpleDisplay, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                            RigVMModel___Multiply_5_1_B__IO;                   // 0x3790(0x60)(None)
	struct FQuat                                 RigVMModel___RigUnit_SetRotation_2_1_Value;        // 0x37F0(0x20)(None)
	float                                        RigVMModel___RigUnit_SetRotation_2_1_Weight;       // 0x3810(0x4)(None)
	uint8                                        Pad_340F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetRotation_2_1_CachedIndex;  // 0x3818(0x10)(ContainsInstancedReference, SimpleDisplay, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_7_BlockToRun; // 0x3828(0x8)(None)
	double                                       RigVMModel___Remap_Result;                         // 0x3830(0x8)(None)
	double                                       RigVMModel___Subtract_2_Result;                    // 0x3838(0x8)(None)
	double                                       RigVMModel___Add_8_Result;                         // 0x3840(0x8)(None)
	double                                       RigVMModel___Add_8_A;                              // 0x3848(0x8)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_2_1_2_Transform; // 0x3850(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_2_1_2_CachedIndex; // 0x38B0(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	double                                       RigVMModel___Subtract_2_B;                         // 0x38C0(0x8)(None)
	double                                       RigVMModel___Remap_1_Result;                       // 0x38C8(0x8)(None)
	double                                       RigVMModel___Subtract_2_1_Result;                  // 0x38D0(0x8)(None)
	double                                       RigVMModel___Add_8_1_Result;                       // 0x38D8(0x8)(None)
	double                                       RigVMModel___Add_8_1_A;                            // 0x38E0(0x8)(None)
	uint8                                        Pad_3410[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_2_1_2_1_Transform; // 0x38F0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_2_1_2_1_CachedIndex; // 0x3950(0x10)(AutoWeak, AssetRegistrySearchable, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	double                                       RigVMModel___Subtract_2_1_B;                       // 0x3960(0x8)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_1_BlockToRun; // 0x3968(0x8)(None)
	struct FTransform                            RigVMModel___RigUnit_GetTransform_17_Transform;    // 0x3970(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_17_CachedIndex;  // 0x39D0(0x10)(ContainsInstancedReference, BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                            RigVMModel___TwoBoneIKSimplePerItem_1_1_Effector__IO; // 0x39E0(0x60)(None)
	float                                        RigVMModel___TwoBoneIKSimplePerItem_1_1_Weight;    // 0x3A40(0x4)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorDistance_Result; // 0x3A44(0x4)(None)
	uint8                                        Pad_3411[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_13_Transform;    // 0x3A50(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_13_CachedIndex;  // 0x3AB0(0x10)(BlueprintCallable, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_A;   // 0x3AC0(0x18)(None)
	uint8                                        Pad_3412[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_6_Transform;     // 0x3AE0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_6_CachedIndex;   // 0x3B40(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_B;   // 0x3B50(0x18)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorDistance_1_Result; // 0x3B68(0x4)(None)
	uint8                                        Pad_3413[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_5_Transform;     // 0x3B70(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_5_CachedIndex;   // 0x3BD0(0x10)(AutoWeak, ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_1_B; // 0x3BE0(0x18)(None)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_1_CachedItemAIndex; // 0x3BF8(0x10)(SimpleDisplay, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_1_CachedItemBIndex; // 0x3C08(0x10)(ContainsInstancedReference, AssetRegistrySearchable, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_1_CachedEffectorItemIndex; // 0x3C18(0x10)(AutoWeak, ContainsInstancedReference, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_1_CachedPoleVectorSpaceIndex; // 0x3C28(0x10)(AutoWeak, AdvancedDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	uint8                                        Pad_3414[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_16_Transform;    // 0x3C40(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_16_CachedIndex;  // 0x3CA0(0x10)(ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                            RigVMModel___TwoBoneIKSimplePerItem_1_Effector__IO; // 0x3CB0(0x60)(None)
	float                                        RigVMModel___TwoBoneIKSimplePerItem_1_Weight;      // 0x3D10(0x4)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorDistance_2_Result; // 0x3D14(0x4)(None)
	uint8                                        Pad_3415[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_14_Transform;    // 0x3D20(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_14_CachedIndex;  // 0x3D80(0x10)(AssetRegistrySearchable, SimpleDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_2_A; // 0x3D90(0x18)(None)
	uint8                                        Pad_3416[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_6_1_Transform;   // 0x3DB0(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_6_1_CachedIndex; // 0x3E10(0x10)(AutoWeak, SimpleDisplay, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_2_B; // 0x3E20(0x18)(None)
	float                                        RigVMModel___RigVMFunction_MathVectorDistance_2_1_Result; // 0x3E38(0x4)(None)
	uint8                                        Pad_3417[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___RigUnit_GetTransform_5_1_Transform;   // 0x3E40(0x60)(None)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_GetTransform_5_1_CachedIndex; // 0x3EA0(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                               RigVMModel___RigVMFunction_MathVectorDistance_2_1_B; // 0x3EB0(0x18)(None)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemAIndex; // 0x3EC8(0x10)(AssetRegistrySearchable, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemBIndex; // 0x3ED8(0x10)(ContainsInstancedReference, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_CachedEffectorItemIndex; // 0x3EE8(0x10)(AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___TwoBoneIKSimplePerItem_1_CachedPoleVectorSpaceIndex; // 0x3EF8(0x10)(AutoWeak, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetRotation_1_CachedIndex;    // 0x3F08(0x10)(ContainsInstancedReference, SimpleDisplay, AdvancedDisplay, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>             RigVMModel___RigUnit_SetRotation_CachedIndex;      // 0x3F18(0x10)(SimpleDisplay, AdvancedDisplay, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	struct FRigElementKey                        RigVMModel___PoseLoop_Item;                        // 0x3F28(0xC)(None)
	uint8                                        Pad_3418[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RigVMModel___PoseLoop_GlobalTransform;             // 0x3F40(0x60)(None)
	struct FVector                               RigVMModel___SetScale_Scale;                       // 0x3FA0(0x18)(None)
	TArray<struct FCachedRigElement>             RigVMModel___SetScale_CachedIndex;                 // 0x3FB8(0x10)(None)
	class FName                                  RigVMModel___PoseLoop_BlockToRun;                  // 0x3FC8(0x8)(None)
	struct FTransform                            RigVMModel___PoseLoop_LocalTransform;              // 0x3FD0(0x60)(None)
	float                                        RigVMModel___PoseLoop_CurveValue;                  // 0x4030(0x4)(None)
	int32                                        RigVMModel___PoseLoop_Index;                       // 0x4034(0x4)(None)
	int32                                        RigVMModel___PoseLoop_Count;                       // 0x4038(0x4)(None)
	float                                        RigVMModel___PoseLoop_Ratio;                       // 0x403C(0x4)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_2_BlockToRun; // 0x4040(0x8)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_3_BlockToRun; // 0x4048(0x8)(None)
	class FName                                  RigVMModel___RigVMFunction_ControlFlowBranch_4_1_BlockToRun; // 0x4050(0x8)(None)

	static class UClass* StaticClass();
	static class URigVMMemory_Work* GetDefaultObj();

};

}


